package topcoder;

import java.util.HashMap;
import java.util.HashSet;
import java.util.Stack;

public class GM {
	
	
	public static int fact (int num) {
		
		if (num == 1) return 1;
		
		return num * fact (num - 1);
	}
	
	
	public static boolean isPal (int num) {
		
		//HashMap <Character, Integer> set = new HashMap <>();
		
		Stack <Character> stack = new Stack<>();
		
		String number = String.valueOf(num);
		
		for (int i = 0; i < number.length(); i++) {
			
			Character ch = number.charAt(i);
			
			if (i < number.length() / 2) {
				stack.push(ch);
			}
			else if (i > number.length() / 2 && stack.peek().equals(ch)) {
				stack.pop();
			}
			
		}
		
		System.out.println(stack.size());
		
		if (stack.isEmpty()) {
			return true;
		}
		else return false;
	}
	
	
	public static void main (String [] args) {
		
		System.out.println("main");
		
		int result = fact(10);
		
		System.out.println(result);
		
		int test = 33;
		
		boolean result2 = isPal(test);
		
		System.out.println(result2);
		
		
		
	}

}
