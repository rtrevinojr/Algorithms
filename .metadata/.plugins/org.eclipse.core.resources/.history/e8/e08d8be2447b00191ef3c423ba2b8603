package topcoder;

import java.util.HashMap;
import java.util.Map;

public class Permutations {
	
	
	public HashMap<Character, Integer> map;
	
	
	public Permutations() {
		map = new HashMap<>();
	}
	
	
	
	public static void perm (String word, String rest) {
		
		if (word == null) {
			System.out.println(rest);
			return;
		}
		
		for (int i = 0; i < word.length(); i++) {
			
			char ch = word.charAt(i);
			
			String upWord = word.substring(0, i) + word.substring(i + 1);
			
			perm(upWord, rest + String.valueOf(ch));
		}
	}
	
	
	public void permX (String word) {
		
		initMap(word);
		
		permXhelp (word, "");
	}
	
	public void initMap (String word) {
		
		for (int i = 0; i < word.length(); i++) {
			Character ch = word.charAt(i);
			if (map.containsKey(ch)) {
				map.put(ch, map.get(ch) + 1);
			}
			else {
				map.put(ch, 1);
			}
		}
	}
	
	public void permXhelp (String word, String rest) {
		
		if (map.isEmpty()) {
			System.out.println(rest);
			return;
		}
		
		for (Map.Entry<Character, Integer> entry : map.entrySet()) {
			
			Character ch = entry.getKey();
			Integer count = entry.getValue();
			if (count > 0) {
				map.put(ch, map.get(ch) - 1);
				permXhelp(word, rest + Character.toString(ch));
			}
		}
	}
	
	
	public static void main (String [] args) {
		
		System.out.println("main...");
		
		
		Permutations p = new Permutations();
		
		p.permX("ABC");
		
		//String test = "ABC";
		//System.out.println(test.substring(4));
		
		
	}

}
