package google;

import java.util.HashMap;

public class LongestSubstringKDistinct {

	
	
	public int lengthOfLongestSubstringTwoDistinct (String s) {
		
		
		int max = 0;
		int start = 0;
		
		HashMap <Character, Integer> map = new HashMap <>();
		
		for (int i = 0; i < s.length(); i++) {
			
			char ch = s.charAt(i);
			
			if (map.containsKey(ch)) {
				map.put(ch, map.get(ch) + 1);
			}
			else {
				map.put(ch, 1);
			}
			
			if (map.size() > 2) {
				
				max = Math.max(max, i - start);
				
				char first = s.charAt(start);
				if (map.get(first) > 1) {
					map.put(first, map.get(first) - 1);
				}
				else {
					map.remove(first);
				}
				start++;
			}
			
		}
		
		return Math.max(max, s.length() - start);
		
	}
	
}
